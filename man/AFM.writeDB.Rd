% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AFM.writeDB.R
\name{AFM.writeDB}
\alias{AFM.writeDB}
\title{Write AFM object to SQL DB}
\usage{
AFM.writeDB(obj, mydb, ID, vacuum = TRUE, verbose = FALSE)
}
\arguments{
\item{obj}{S4 AFM object from nanoAFMr package, if object is \code{NULL}, then ID will be removed from database}

\item{mydb}{database connection from DBI package}

\item{ID}{unique object file ID}

\item{vacuum}{vacuums the database, if obj is \code{NULL} and something is deleted; this option saves space}

\item{verbose}{if \code{TRUE} outputs verbose comments}
}
\description{
An AFMdata S4 image is written to an SQL database; the ID will 
save it in a particular table in the database, if another AFM image 
with the same ID exists, it will be overwritten. 

Open: mydb <- DBI::dbConnect(RSQLite::SQLite(), "myFile.sqlite")

Close: DBI::dbDisconnect(mydb)

You can create a new AFM database in the following way:

    mydb <- DBI::dbConnect(RSQLite::SQLite(), "db.sqlite")
    
    AFM.writeDB(NULL, mydb, 0, vacuum=FALSE)
    
    DBI::dbDisconnect(mydb)
}
\seealso{
[\code{\link{AFM.readDB}}]
}
\author{
Thomas Gredig
}
